name: Build container image and deploy on dockerhub
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * SAT'
    
jobs:
  Build-And-Deploy-Container:
    runs-on: ubuntu-latest
    # Run if it's not a PR, or if the PR comes from an external repository
    if: ${{ github.event_name != 'pull_request' || github.event.repository.full_name != github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch tags
        shell: bash
        run: git fetch --tags -f
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]')"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Compute tag
        env:
          TZ: UTC
        run: |
          TAG="$(git describe || git log -n1 --date=format:'%Y-%m-%dT%H%M%S' --format=%cd)$(date +%Y-%m-%d_%H%M)"
          echo TAG="$TAG"
          echo TAG="$TAG" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$TAG" .
          docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$TAG" .
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Deploy Image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push --all-tags $IMAGE_NAME
